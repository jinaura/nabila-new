<div class="container section__item section_spacing">
  <h2 class="section__title">{{ section.settings.title }}</h2>
  <hr class="section__divider" />
  <div class="desc half">{{ section.settings.description }}</div>
  <hr class="divider--start">
  
  <div class="ingredientsFilter"> <!-- Wrapper -->
    
    <div class="filterTabs"> <!-- Tabs -->
      <div>
        <ul class="button-area filters">
          {%- for block in section.blocks -%}
          
            {%- for i in (1..3) -%}
                {%- capture cat %}category_{{i}}{% endcapture -%}
          		{% if block.settings[cat] != blank %}
                  <label class="button">
                  	<input type="checkbox" value="{{ block.settings[cat] | downcase | replace:' ','-' }}" />{{ block.settings[cat] }}
                  </label>
          		{% endif %}
            {%- endfor -%}

          {%- endfor -%}
        </ul>
      </div>
    </div> <!-- Tabs // -->
    
    <div class="accordions" id="mnsry_container"> <!-- Accordions -->
      {% for block in section.blocks %}
        <div class="item {{ block.settings.category_1 | downcase | replace:' ','-' }} {{ block.settings.category_2 | downcase | replace:' ','-' }} {{ block.settings.category_3 | downcase | replace:' ','-' }}" id="block-{{block.id}}" {{ block.shopify_attributes }}>
          <header>
            <h3>{{ block.settings.title }}</h3>
            <div class="s_desc">
              {{ block.settings.short_description | truncate: 104, "." | replace:'<.',' ' }}
            </div>
            <p>
            {%- for i in (1..3) -%}
              {%- capture cat -%}category_{{i}}{%- endcapture -%}
              {%- if block.settings[cat] != blank -%} 
                {{- block.settings[cat] | append: ', ' -}}
              {%- endif -%}
            {%- endfor -%}
            </p>
          </header>
          <section class="body">
            <div class="hidden-sm hidden-md hidden-lg"><div class="s_desc">{{ block.settings.short_description }}</div></div>
            <div>
              <div class="acc_col">
                <h3>Source</h3>
                {{ block.settings.source }}
              </div>
              <div class="acc_col">
                <h3>Benefit/Function</h3>
                {{ block.settings.benefit }}
              </div>
              <div class="acc_col">
                <h3>Used In</h3>
                {% for i in (1..5) %}
                    {% capture productLink %}usedin_{{i}}{% endcapture %}
                    {% assign link = all_products[block.settings[productLink]].url %}
                    {% assign title = all_products[block.settings[productLink]].title %}

                	{% if link != blank and title != blank %}<a href="{{ link }}" traget="_blank">{{ title }}</a>{% endif %}
                {% endfor %}
              </div>
            </div>
          </section>
        </div>
      {% endfor %}
    </div> <!-- Accordions // -->
    
  </div><!-- Wrapper // -->
  
</div>


<script type="text/javascript" src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
<script type="text/javascript" src="https://cdn.rawgit.com/desandro/masonry/master/dist/masonry.pkgd.min.js"></script>
<script type="text/javascript" src="https://cdn.rawgit.com/digistate/resouces/master/multipleFilterMasonry.js"></script>
<script>
  // Params
  var j$ = jQuery,
      $mContainer = j$("#mnsry_container"),
      $filterButton = j$(".button"),
      $loadingMessage = j$("#loading_msg");
      $params = {
        itemSelector: ".item",
        filtersGroupSelector:".filters",
        horizontalOrder: true
//         selectorType: "list"
      };

  // After the page is loaded
  j$(window).load(function() { 
    $mContainer.masonry({
      transitionDuration: 0
    });
    // Do mansonry with filtering 
    $mContainer.multipleFilterMasonry($params);
    // Show articles with fadein
    $mContainer.find("article").animate({
        "opacity":1
      }, 1200);
    // Hide loading message
    $loadingMessage.fadeOut();

    // Change the filtering button(label) status 
    $filterButton.find("input").change(function(){
      j$(this).parent().toggleClass("active");
    });
    
    $('.accordions .item header p+p').each(function(){
      $(this).text($(this).text().slice(0,-2));
    });

    $('.accordions .item header>p').each(function(){
      var str = $(this).text().replace(/,\s*$/, "");
      $(this).text(str)
    })
    
  });
</script>

{% schema %}
{
  "name": "All Ingredients",
  "class": "all-ingredients",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "All Ingredients"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Description</p>"
    }
  ],
  "blocks": [
    {
      "type": "accordians_blocks",
      "name": "Ingredient",
	  "settings": [
        {
          "type": "header",
          "content": "Accordian Header Content"
        },
      	{
          "type": "text",
          "id": "title",
          "label": "Ingredient Name",
		  "default": "Ingredient"
        },
        {
          "type": "richtext",
          "id": "short_description",
          "label": "Short Description",
          "default": "<p>short description</p>"
        },
        {
          "type": "text",
          "id": "category_1",
          "label": "Category 1",
          "default": "Category 1"
        },
        {
          "type": "text",
          "id": "category_2",
          "label": "Category 2",
          "default": "Category 2"
        },
        {
          "type": "text",
          "id": "category_3",
          "label": "Category 3",
          "default": "Category 3"
        },
        {
          "type": "header",
          "content": "Accordian Body Content"
        },
        {
          "type": "richtext",
          "id": "source",
          "label": "Source",
          "default": "<p>Source</p>"
        },
        {
          "type": "richtext",
          "id": "benefit",
          "label": "Benefit/Function",
          "default": "<p>Benefit/Function</p>"
        },
        {
          "type": "product",
          "id": "usedin_1",
          "label": "Used In link 1"
        },
        {
          "type": "product",
          "id": "usedin_2",
          "label": "Used In link 2"
        },
        {
          "type": "product",
          "id": "usedin_3",
          "label": "Used In link 3"
        },
        {
          "type": "product",
          "id": "usedin_4",
          "label": "Used In link 4"
        },
        {
          "type": "product",
          "id": "usedin_5",
          "label": "Used In link 5"
        }
      ]
    }
  ]
}
{% endschema %}